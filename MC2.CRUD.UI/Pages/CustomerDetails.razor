@page "/fetchcustomedetails"
@using Mc2.CrudTest.DomainModel.Customer.Dtos
@using System.Net.Http.Json
@using Mc2.CrudTest.ModelFramework.DTOs.BaseResult
@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@inject HttpClient Http
<h1>Customer Data</h1>
 <div class="row">
    <div class="col-md-6">
        <a href='/customer/add' class="btn btn-primary" role="button">
            <i class="fas fa-user-plus"></i>
            Add Customer
        </a>
    </div>
 </div>
<br />
@if (customerList == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-striped align-middle table-bordered">
        <thead class="table-success">
            <tr>
                <th>Id</th>
                <th>ّFirstName</th>
                <th>LastName</th>
                <th>Mobile</th>
                <th>Email</th>
                <th>BirthDay</th>
                <th>BankAccount</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var customer in customerList)
            {
                <tr>
                    <td>@customer.CustomerId</td>
                    <td>@customer.FirstName</td>
                    <td>@customer.LastName</td>
                    <td>@customer.PhoneNumber</td>
                    <td>@customer.Email</td>
                    <td>@customer.DateOfBirth</td>
                    <td>@customer.BankAccountNumber</td>
                    <td>
                        <a href='/customer/edit/@customer.CustomerId' class="btn btn-outline-dark" role="button">
                            Edit
                        </a>
                        <a href='/customer/delete/@customer.CustomerId' class="btn btn-outline-danger" role="button">
                            Delete
                        </a>
                    </td>
                </tr>
            }
        </tbody>

    </table>
}
@code {
    protected List<CustomerItemDto> customerList = new();
  
    protected CustomerItemDto customer = new();

    protected override async Task OnInitializedAsync()
    {
        await GetCustomer();
    }
    protected async Task GetCustomer()
    {
        try
        {
            var result = await Http.GetFromJsonAsync<object>("https://localhost:5001/GetAllCustomers");
             dynamic data = JsonConvert.DeserializeObject<dynamic>(result.ToString());
            var ss =JsonConvert.SerializeObject( data.result);
              customerList = JsonConvert.DeserializeObject<List<CustomerItemDto>>(ss);
              
        }

   
        catch (Exception ex) 
        {
            
            throw;
        }     
      
    }
    protected void DeleteConfirm(int customerId)
    {
        customer = customerList.FirstOrDefault(x => x.CustomerId == customerId);
    }
   
}